<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tianrui.service.mapper.system.auth.SystemUserRoleMapper">
	<resultMap id="BaseResultMap"
		type="com.tianrui.service.bean.system.auth.SystemUserRole">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="userid" property="userid" jdbcType="VARCHAR" />
		<result column="roleid" property="roleid" jdbcType="VARCHAR" />
		<result column="isvalid" property="isvalid" jdbcType="VARCHAR" />
		<result column="creator" property="creator" jdbcType="VARCHAR" />
		<result column="createtime" property="createtime" jdbcType="BIGINT" />
		<result column="modifier" property="modifier" jdbcType="VARCHAR" />
		<result column="modifytime" property="modifytime" jdbcType="BIGINT" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, userid, roleid, isvalid, creator, createtime, modifier, modifytime,
		remark
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from tr_system_user_role
		where id = #{id,jdbcType=VARCHAR}
	</select>

	<select id="selectByUserId" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from tr_system_user_role
		where userid = #{id,jdbcType=VARCHAR}
	</select>

	<select id="iphoneRole" resultMap="BaseResultMap" parameterType="java.lang.String">
		SELECT t1.id as `roleid`
		FROM tr_system_role t1
		WHERE t1.id IN
		(SELECT t2.roleid FROM tr_system_user_role t2
		WHERE t2.isvalid='1' and t2.userid = #{id,jdbcType=VARCHAR}) AND
		t1.role_type="4"
	</select>
	<select id="subsystemRole" resultMap="BaseResultMap" parameterType="java.lang.String">
		SELECT t1.id as `roleid`,t1.userType as `remark`
		FROM tr_system_role t1
		WHERE t1.id IN
		(SELECT t2.roleid FROM tr_system_user_role t2
		WHERE t2.isvalid='1' and t2.userid = #{id,jdbcType=VARCHAR}) AND
		t1.role_type="5"
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from tr_system_user_role
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByUserRole" parameterType="java.lang.String">
		delete from tr_system_user_role
		where userid = #{id,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.tianrui.service.bean.system.auth.SystemUserRole">
		insert into tr_system_user_role (id, userid, roleid,
		isvalid, creator, createtime,
		modifier, modifytime, remark
		)
		values (#{id,jdbcType=VARCHAR}, #{userid,jdbcType=VARCHAR},
		#{roleid,jdbcType=VARCHAR},
		#{isvalid,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR}, #{createtime,jdbcType=BIGINT},
		#{modifier,jdbcType=VARCHAR}, #{modifytime,jdbcType=BIGINT},
		#{remark,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.tianrui.service.bean.system.auth.SystemUserRole">
		insert into tr_system_user_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userid != null">
				userid,
			</if>
			<if test="roleid != null">
				roleid,
			</if>
			<if test="isvalid != null">
				isvalid,
			</if>
			<if test="creator != null">
				creator,
			</if>
			<if test="createtime != null">
				createtime,
			</if>
			<if test="modifier != null">
				modifier,
			</if>
			<if test="modifytime != null">
				modifytime,
			</if>
			<if test="remark != null">
				remark,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="userid != null">
				#{userid,jdbcType=VARCHAR},
			</if>
			<if test="roleid != null">
				#{roleid,jdbcType=VARCHAR},
			</if>
			<if test="isvalid != null">
				#{isvalid,jdbcType=VARCHAR},
			</if>
			<if test="creator != null">
				#{creator,jdbcType=VARCHAR},
			</if>
			<if test="createtime != null">
				#{createtime,jdbcType=BIGINT},
			</if>
			<if test="modifier != null">
				#{modifier,jdbcType=VARCHAR},
			</if>
			<if test="modifytime != null">
				#{modifytime,jdbcType=BIGINT},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.tianrui.service.bean.system.auth.SystemUserRole">
		update tr_system_user_role
		<set>
			<if test="userid != null">
				userid = #{userid,jdbcType=VARCHAR},
			</if>
			<if test="roleid != null">
				roleid = #{roleid,jdbcType=VARCHAR},
			</if>
			<if test="isvalid != null">
				isvalid = #{isvalid,jdbcType=VARCHAR},
			</if>
			<if test="creator != null">
				creator = #{creator,jdbcType=VARCHAR},
			</if>
			<if test="createtime != null">
				createtime = #{createtime,jdbcType=BIGINT},
			</if>
			<if test="modifier != null">
				modifier = #{modifier,jdbcType=VARCHAR},
			</if>
			<if test="modifytime != null">
				modifytime = #{modifytime,jdbcType=BIGINT},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.tianrui.service.bean.system.auth.SystemUserRole">
		update tr_system_user_role
		set userid = #{userid,jdbcType=VARCHAR},
		roleid = #{roleid,jdbcType=VARCHAR},
		isvalid = #{isvalid,jdbcType=VARCHAR},
		creator = #{creator,jdbcType=VARCHAR},
		createtime = #{createtime,jdbcType=BIGINT},
		modifier = #{modifier,jdbcType=VARCHAR},
		modifytime = #{modifytime,jdbcType=BIGINT},
		remark = #{remark,jdbcType=VARCHAR}
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<select id="queryUserByRole" parameterType="com.tianrui.api.req.system.auth.SystemUserQueryReq"
		resultType="com.tianrui.api.resp.system.auth.SystemUserRoleResp">
		select t1.id as id, t2.id as userid, t2.code as usercode, t2.name as
		username, t1.remark as userremark
		from tr_system_user_role t1 LEFT JOIN tr_system_user t2 on t1.userid =
		t2.id
		<where>
			t1.isvalid = 1 and t1.roleid = #{roleid,jdbcType=VARCHAR}
			<if test="codeLike != null and codeLike != ''">
				and code like CONCAT('%', #{codeLike,jdbcType=VARCHAR}, '%')
			</if>
			<if test="nameLike != null and nameLike != ''">
				and name like CONCAT('%', #{nameLike,jdbcType=VARCHAR}, '%')
			</if>
		</where>
		order by t1.createtime desc
	</select>
	<select id="queryAllUserByRole" parameterType="com.tianrui.api.req.system.auth.SystemUserQueryReq"
		resultType="com.tianrui.api.resp.system.auth.SystemUserRoleResp">
		SELECT
		t.id as userid,
		t.name as username
		FROM
		tr_system_user t
		WHERE
		t.isvalid = 1 and t.identityTypes = 3
		and NOT EXISTS(select id from
		tr_system_user_role where userid = t.id and isvalid = 1 and roleid =
		#{roleid,jdbcType=VARCHAR})
		<if test="key != null and key != ''">
			and (t.code like CONCAT('%', #{key,jdbcType=VARCHAR}, '%')
			or t.name like CONCAT('%', #{key,jdbcType=VARCHAR}, '%'))
		</if>
		order by t.createtime desc
	</select>
	<insert id="insertBatch" parameterType="java.util.List">
		insert into tr_system_user_role
		(
		id,
		userid,
		roleid,
		isvalid,
		creator,
		createtime,
		modifier,
		modifytime,
		remark
		)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(
			#{item.id},
			#{item.userid},
			#{item.roleid},
			#{item.isvalid},
			#{item.creator},
			#{item.createtime},
			#{item.modifier},
			#{item.modifytime},
			#{item.remark}
			)
		</foreach>
	</insert>
	<update id="deleteUserToRole" parameterType="java.util.List">
		update tr_system_user_role set isvalid = '0'
		where id in
		<foreach collection="list" index="index" item="item" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</update>

	<select id="selectByUserRole" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from tr_system_user_role
		where userid = #{id,jdbcType=VARCHAR} and isvalid='1'
	</select>
</mapper>