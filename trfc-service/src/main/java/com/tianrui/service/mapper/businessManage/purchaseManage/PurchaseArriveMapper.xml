<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tianrui.service.mapper.businessManage.purchaseManage.PurchaseArriveMapper" >
  <resultMap id="BaseResultMap" type="com.tianrui.service.bean.businessManage.purchaseManage.PurchaseArrive" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="auditstatus" property="auditstatus" jdbcType="VARCHAR" />
    <result column="source" property="source" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="vehicleid" property="vehicleid" jdbcType="VARCHAR" />
    <result column="vehicleno" property="vehicleno" jdbcType="VARCHAR" />
    <result column="vehiclerfid" property="vehiclerfid" jdbcType="VARCHAR" />
    <result column="driverid" property="driverid" jdbcType="VARCHAR" />
    <result column="drivername" property="drivername" jdbcType="VARCHAR" />
    <result column="driveridentityno" property="driveridentityno" jdbcType="VARCHAR" />
    <result column="billid" property="billid" jdbcType="VARCHAR" />
    <result column="billcode" property="billcode" jdbcType="VARCHAR" />
    <result column="billdetailid" property="billdetailid" jdbcType="VARCHAR" />
    <result column="poundnoteid" property="poundnoteid" jdbcType="VARCHAR" />
    <result column="poundnotecode" property="poundnotecode" jdbcType="VARCHAR" />
    <result column="abnormalperson" property="abnormalperson" jdbcType="VARCHAR" />
    <result column="abnormalpersonname" property="abnormalpersonname" jdbcType="VARCHAR" />
    <result column="abnormaltime" property="abnormaltime" jdbcType="BIGINT" />
    <result column="arrivalamount" property="arrivalamount" jdbcType="DOUBLE" />
    <result column="signamount" property="signamount" jdbcType="DOUBLE" />
    <result column="unit" property="unit" jdbcType="VARCHAR" />
    <result column="makerid" property="makerid" jdbcType="VARCHAR" />
    <result column="makebillname" property="makebillname" jdbcType="VARCHAR" />
    <result column="makebilltime" property="makebilltime" jdbcType="BIGINT" />
    <result column="icardid" property="icardid" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="creator" property="creator" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="BIGINT" />
    <result column="modifier" property="modifier" jdbcType="VARCHAR" />
    <result column="modifytime" property="modifytime" jdbcType="BIGINT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="signStatus" property="signStatus" jdbcType="TINYINT" />
    <result column="signPerson" property="signPerson" jdbcType="VARCHAR" />
    <result column="signPersonName" property="signPersonName" jdbcType="VARCHAR" />
    <result column="signTime" property="signTime" jdbcType="BIGINT" />
    <result column="signID" property="signID" jdbcType="VARCHAR" />
    <result column="forceOutFactory" property="forceOutFactory" jdbcType="BIT" />
    <result column="forceOutFactoryPerson" property="forceOutFactoryPerson" jdbcType="VARCHAR" />
    <result column="forceOutFactoryTime" property="forceOutFactoryTime" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, code, auditstatus, source, status, type, vehicleid, 
    vehicleno, vehiclerfid, driverid, drivername, driveridentityno, billid, billcode, 
    billdetailid, poundnoteid, poundnotecode, abnormalperson, abnormalpersonname, abnormaltime, arrivalamount, signamount, unit, makerid, 
    makebillname, makebilltime, icardid, state, creator, createtime, modifier, modifytime, remark, signStatus, signPerson, signPersonName, signTime, signID, 
    forceOutFactory, forceOutFactoryPerson, forceOutFactoryTime
  </sql>
  <sql id="P_Base_Column_List" >
    p1.id, p1.code, p1.auditstatus, p1.source, p1.status, p1.type, p1.vehicleid, 
    p1.vehicleno, p1.vehiclerfid, p1.driverid, p1.drivername, p1.driveridentityno, p1.billid, p1.billcode, 
    p1.billdetailid, p1.poundnoteid, p1.poundnotecode, p1.abnormalperson, p1.abnormalpersonname, p1.abnormaltime, p1.arrivalamount, p1.signamount, p1.unit, p1.makerid, 
    p1.makebillname, p1.makebilltime, p1.icardid, p1.state, p1.creator, p1.createtime, p1.modifier, p1.modifytime, p1.remark, p1.signStatus, p1.signPerson, p1.signPersonName, 
    p1.signTime, p1.signID, p1.forceOutFactory, p1.forceOutFactoryPerson, p1.forceOutFactoryTime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from tr_purchase_db_arrive
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tr_purchase_db_arrive
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.tianrui.service.bean.businessManage.purchaseManage.PurchaseArrive" >
    insert into tr_purchase_db_arrive (id, code, auditstatus, 
      source, status, type, vehicleid, vehicleno, 
      vehiclerfid, driverid, drivername, 
      driveridentityno, billid, billcode, 
      billdetailid, poundnoteid, poundnotecode,
      abnormalperson, abnormalpersonname, abnormaltime, 
      arrivalamount, signamount, unit, makerid, 
      makebillname, makebilltime, icardid, state, creator, 
      createtime, modifier, modifytime, 
      remark, signStatus, signPerson, signPersonName, 
      signTime, signID, forceOutFactory, forceOutFactoryPerson, forceOutFactoryTime)
    values (#{id,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, #{auditstatus,jdbcType=VARCHAR}, 
      #{source,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{vehicleid,jdbcType=VARCHAR}, #{vehicleno,jdbcType=VARCHAR}, 
      #{vehiclerfid,jdbcType=VARCHAR}, #{driverid,jdbcType=VARCHAR}, #{drivername,jdbcType=VARCHAR}, 
      #{driveridentityno,jdbcType=VARCHAR}, #{billid,jdbcType=VARCHAR}, #{billcode,jdbcType=VARCHAR},
      #{billdetailid,jdbcType=VARCHAR}, #{poundnoteid,jdbcType=VARCHAR}, #{poundnotecode,jdbcType=VARCHAR}, 
      #{abnormalperson,jdbcType=VARCHAR}, #{abnormalpersonname,jdbcType=VARCHAR}, #{abnormaltime,jdbcType=BIGINT}, 
      #{arrivalamount,jdbcType=DOUBLE}, #{signamount,jdbcType=DOUBLE}, #{unit,jdbcType=VARCHAR}, #{makerid,jdbcType=VARCHAR}, #{makebillname,jdbcType=VARCHAR}, 
      #{makebilltime,jdbcType=BIGINT}, #{icardid,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=BIGINT}, #{modifier,jdbcType=VARCHAR}, #{modifytime,jdbcType=BIGINT}, 
      #{remark,jdbcType=VARCHAR}, #{signStatus,jdbcType=TINYINT}, #{signPerson,jdbcType=VARCHAR}, 
      #{signPersonName,jdbcType=VARCHAR}, #{signTime,jdbcType=BIGINT}, #{signID,jdbcType=VARCHAR},
      #{forceOutFactory,jdbcType=BIT}, #{forceOutFactoryPerson,jdbcType=VARCHAR}, #{forceOutFactoryTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.tianrui.service.bean.businessManage.purchaseManage.PurchaseArrive" >
    insert into tr_purchase_db_arrive
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="auditstatus != null" >
        auditstatus,
      </if>
      <if test="source != null" >
        source,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="vehicleid != null" >
        vehicleid,
      </if>
      <if test="vehicleno != null" >
        vehicleno,
      </if>
      <if test="vehiclerfid != null" >
        vehiclerfid,
      </if>
      <if test="driverid != null" >
        driverid,
      </if>
      <if test="drivername != null" >
        drivername,
      </if>
      <if test="driveridentityno != null" >
        driveridentityno,
      </if>
      <if test="billid != null" >
        billid,
      </if>
      <if test="billcode != null" >
        billcode,
      </if>
      <if test="billdetailid != null" >
        billdetailid,
      </if>
      <if test="poundnoteid != null" >
        poundnoteid,
      </if>
      <if test="poundnotecode != null" >
        poundnotecode,
      </if>
      <if test="abnormalperson != null" >
        abnormalperson,
      </if>
      <if test="abnormalpersonname != null" >
        abnormalpersonname,
      </if>
      <if test="abnormaltime != null" >
        abnormaltime,
      </if>
      <if test="arrivalamount != null" >
        arrivalamount,
      </if>
      <if test="signamount != null" >
        signamount,
      </if>
      <if test="unit != null" >
        unit,
      </if>
      <if test="makerid != null" >
        makerid,
      </if>
      <if test="makebillname != null" >
        makebillname,
      </if>
      <if test="makebilltime != null" >
        makebilltime,
      </if>
      <if test="icardid != null" >
        icardid,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="modifier != null" >
        modifier,
      </if>
      <if test="modifytime != null" >
        modifytime,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="signStatus != null" >
        signStatus,
      </if>
      <if test="signPerson != null" >
        signPerson,
      </if>
      <if test="signPersonName != null" >
        signPersonName,
      </if>
      <if test="signTime != null" >
        signTime,
      </if>
      <if test="signID != null" >
        signID,
      </if>
      <if test="forceOutFactory != null" >
        forceOutFactory,
      </if>
      <if test="forceOutFactoryPerson != null" >
        forceOutFactoryPerson,
      </if>
      <if test="forceOutFactoryTime != null" >
        forceOutFactoryTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="auditstatus != null" >
        #{auditstatus,jdbcType=VARCHAR},
      </if>
      <if test="source != null" >
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="vehicleid != null" >
        #{vehicleid,jdbcType=VARCHAR},
      </if>
      <if test="vehicleno != null" >
        #{vehicleno,jdbcType=VARCHAR},
      </if>
      <if test="vehiclerfid != null" >
        #{vehiclerfid,jdbcType=VARCHAR},
      </if>
      <if test="driverid != null" >
        #{driverid,jdbcType=VARCHAR},
      </if>
      <if test="drivername != null" >
        #{drivername,jdbcType=VARCHAR},
      </if>
      <if test="driveridentityno != null" >
        #{driveridentityno,jdbcType=VARCHAR},
      </if>
      <if test="billid != null" >
        #{billid,jdbcType=VARCHAR},
      </if>
      <if test="billcode != null" >
        #{billcode,jdbcType=VARCHAR},
      </if>
      <if test="billdetailid != null" >
        #{billdetailid,jdbcType=VARCHAR},
      </if>
      <if test="poundnoteid != null" >
        #{poundnoteid,jdbcType=VARCHAR},
      </if>
      <if test="poundnotecode != null" >
        #{poundnotecode,jdbcType=VARCHAR},
      </if>
      <if test="abnormalperson != null" >
        #{abnormalperson,jdbcType=VARCHAR},
      </if>
      <if test="abnormalpersonname != null" >
        #{abnormalpersonname,jdbcType=VARCHAR},
      </if>
      <if test="abnormaltime != null" >
        #{abnormaltime,jdbcType=BIGINT},
      </if>
      <if test="arrivalamount != null" >
        #{arrivalamount,jdbcType=DOUBLE},
      </if>
      <if test="signamount != null" >
        #{signamount,jdbcType=DOUBLE},
      </if>
      <if test="unit != null" >
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="makerid != null" >
        #{makerid,jdbcType=VARCHAR},
      </if>
      <if test="makebillname != null" >
        #{makebillname,jdbcType=VARCHAR},
      </if>
      <if test="makebilltime != null" >
        #{makebilltime,jdbcType=BIGINT},
      </if>
      <if test="icardid != null" >
        #{icardid,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=BIGINT},
      </if>
      <if test="modifier != null" >
        #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="modifytime != null" >
        #{modifytime,jdbcType=BIGINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="signStatus != null" >
        #{signStatus,jdbcType=TINYINT},
      </if>
      <if test="signPerson != null" >
        #{signPerson,jdbcType=VARCHAR},
      </if>
      <if test="signPersonName != null" >
        #{signPersonName,jdbcType=VARCHAR},
      </if>
      <if test="signTime != null" >
        #{signTime,jdbcType=BIGINT},
      </if>
      <if test="signID != null" >
        #{signID,jdbcType=BIGINT},
      </if>
      <if test="forceOutFactory != null" >
        #{forceOutFactory,jdbcType=BIT},
      </if>
      <if test="forceOutFactoryPerson != null" >
        #{forceOutFactoryPerson,jdbcType=VARCHAR},
      </if>
      <if test="forceOutFactoryTime != null" >
        #{forceOutFactoryTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tianrui.service.bean.businessManage.purchaseManage.PurchaseArrive" >
    update tr_purchase_db_arrive
    <set >
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="auditstatus != null" >
        auditstatus = #{auditstatus,jdbcType=VARCHAR},
      </if>
      <if test="source != null" >
        source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="vehicleid != null" >
        vehicleid = #{vehicleid,jdbcType=VARCHAR},
      </if>
      <if test="vehicleno != null" >
        vehicleno = #{vehicleno,jdbcType=VARCHAR},
      </if>
      <if test="vehiclerfid != null" >
        vehiclerfid = #{vehiclerfid,jdbcType=VARCHAR},
      </if>
      <if test="driverid != null" >
        driverid = #{driverid,jdbcType=VARCHAR},
      </if>
      <if test="drivername != null" >
        drivername = #{drivername,jdbcType=VARCHAR},
      </if>
      <if test="driveridentityno != null" >
        driveridentityno = #{driveridentityno,jdbcType=VARCHAR},
      </if>
      <if test="billid != null" >
        billid = #{billid,jdbcType=VARCHAR},
      </if>
      <if test="billcode != null" >
        billcode = #{billcode,jdbcType=VARCHAR},
      </if>
      <if test="billdetailid != null" >
        billdetailid = #{billdetailid,jdbcType=VARCHAR},
      </if>
      <if test="poundnoteid != null" >
        poundnoteid = #{poundnoteid,jdbcType=VARCHAR},
      </if>
      <if test="poundnotecode != null" >
        poundnotecode = #{poundnotecode,jdbcType=VARCHAR},
      </if>
      <if test="abnormalperson != null" >
        abnormalperson = #{abnormalperson,jdbcType=VARCHAR},
      </if>
      <if test="abnormalpersonname != null" >
        abnormalpersonname = #{abnormalpersonname,jdbcType=VARCHAR},
      </if>
      <if test="abnormaltime != null" >
        abnormaltime = #{abnormaltime,jdbcType=BIGINT},
      </if>
      <if test="arrivalamount != null" >
        arrivalamount = #{arrivalamount,jdbcType=DOUBLE},
      </if>
      <if test="signamount != null" >
        signamount = #{signamount,jdbcType=DOUBLE},
      </if>
      <if test="unit != null" >
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="makerid != null" >
        makerid = #{makerid,jdbcType=VARCHAR},
      </if>
      <if test="makebillname != null" >
        makebillname = #{makebillname,jdbcType=VARCHAR},
      </if>
      <if test="makebilltime != null" >
        makebilltime = #{makebilltime,jdbcType=BIGINT},
      </if>
      <if test="icardid != null" >
        icardid = #{icardid,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=BIGINT},
      </if>
      <if test="modifier != null" >
        modifier = #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="modifytime != null" >
        modifytime = #{modifytime,jdbcType=BIGINT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="signStatus != null" >
        signStatus = #{signStatus,jdbcType=TINYINT},
      </if>
      <if test="signPerson != null" >
        signPerson = #{signPerson,jdbcType=VARCHAR},
      </if>
      <if test="signPersonName != null" >
        signPersonName = #{signPersonName,jdbcType=VARCHAR},
      </if>
      <if test="signTime != null" >
        signTime = #{signTime,jdbcType=BIGINT},
      </if>
      <if test="signID != null" >
        signID = #{signID,jdbcType=BIGINT},
      </if>
      <if test="forceOutFactory != null" >
        forceOutFactory = #{forceOutFactory,jdbcType=BIT},
      </if>
      <if test="forceOutFactoryPerson != null" >
        forceOutFactoryPerson = #{forceOutFactoryPerson,jdbcType=VARCHAR},
      </if>
      <if test="forceOutFactoryTime != null" >
        forceOutFactoryTime = #{forceOutFactoryTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tianrui.service.bean.businessManage.purchaseManage.PurchaseArrive" >
    update tr_purchase_db_arrive
    set code = #{code,jdbcType=VARCHAR},
      auditstatus = #{auditstatus,jdbcType=VARCHAR},
      source = #{source,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      vehicleid = #{vehicleid,jdbcType=VARCHAR},
      vehicleno = #{vehicleno,jdbcType=VARCHAR},
      vehiclerfid = #{vehiclerfid,jdbcType=VARCHAR},
      driverid = #{driverid,jdbcType=VARCHAR},
      drivername = #{drivername,jdbcType=VARCHAR},
      driveridentityno = #{driveridentityno,jdbcType=VARCHAR},
      billid = #{billid,jdbcType=VARCHAR},
      billcode = #{billcode,jdbcType=VARCHAR},
      billdetailid = #{billdetailid,jdbcType=VARCHAR},
      poundnoteid = #{poundnoteid,jdbcType=VARCHAR},
      poundnotecode = #{poundnotecode,jdbcType=VARCHAR},
      abnormalperson = #{abnormalperson,jdbcType=VARCHAR},
      abnormalpersonname = #{abnormalpersonname,jdbcType=VARCHAR},
      abnormaltime = #{abnormaltime,jdbcType=BIGINT},
      arrivalamount = #{arrivalamount,jdbcType=DOUBLE},
      signamount = #{signamount,jdbcType=DOUBLE},
      unit = #{unit,jdbcType=VARCHAR},
      makerid = #{makerid,jdbcType=VARCHAR},
      makebillname = #{makebillname,jdbcType=VARCHAR},
      makebilltime = #{makebilltime,jdbcType=BIGINT},
      icardid = #{icardid,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=BIGINT},
      modifier = #{modifier,jdbcType=VARCHAR},
      modifytime = #{modifytime,jdbcType=BIGINT},
      remark = #{remark,jdbcType=VARCHAR},
      signStatus = #{signStatus,jdbcType=TINYINT},
      signPerson = #{signPerson,jdbcType=VARCHAR},
      signPersonName = #{signPersonName,jdbcType=VARCHAR},
      signTime = #{signTime,jdbcType=BIGINT},
      signID = #{signID,jdbcType=BIGINT},
      forceOutFactory = #{forceOutFactory,jdbcType=BIT},
      forceOutFactoryPerson = #{forceOutFactoryPerson,jdbcType=VARCHAR},
      forceOutFactoryTime = #{forceOutFactoryTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectSelective" parameterType="com.tianrui.service.bean.businessManage.purchaseManage.PurchaseArrive" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tr_purchase_db_arrive
    <where>
      <if test="id != null and id != ''" >
        and id = #{id,jdbcType=VARCHAR}
      </if>
      <if test="code != null and code != ''" >
        and code = #{code,jdbcType=VARCHAR}
      </if>
      <if test="auditstatus != null and auditstatus != ''" >
        and auditstatus = #{auditstatus,jdbcType=VARCHAR}
      </if>
      <if test="source != null and source != ''" >
        and source = #{source,jdbcType=VARCHAR}
      </if>
      <if test="status != null and status != ''" >
        and status = #{status,jdbcType=VARCHAR}
      </if>
      <if test="type != null and type != ''" >
        and type = #{type,jdbcType=VARCHAR}
      </if>
      <if test="vehicleid != null and vehicleid != ''" >
        and vehicleid = #{vehicleid,jdbcType=VARCHAR}
      </if>
      <if test="vehicleno != null and vehicleno != ''" >
        and vehicleno = #{vehicleno,jdbcType=VARCHAR}
      </if>
      <if test="vehiclerfid != null and vehiclerfid != ''" >
        and vehiclerfid = #{vehiclerfid,jdbcType=VARCHAR}
      </if>
      <if test="driverid != null and driverid != ''" >
        and driverid = #{driverid,jdbcType=VARCHAR}
      </if>
      <if test="drivername != null and drivername != ''" >
        and drivername = #{drivername,jdbcType=VARCHAR}
      </if>
      <if test="driveridentityno != null and driveridentityno != ''" >
        and driveridentityno = #{driveridentityno,jdbcType=VARCHAR}
      </if>
      <if test="billid != null and billid != ''" >
        and billid = #{billid,jdbcType=VARCHAR}
      </if>
      <if test="billcode != null and billcode != ''" >
        and billcode = #{billcode,jdbcType=VARCHAR}
      </if>
      <if test="billdetailid != null and billdetailid != ''" >
        and billdetailid = #{billdetailid,jdbcType=VARCHAR}
      </if>
      <if test="poundnoteid != null and poundnoteid != ''" >
        and poundnoteid = #{poundnoteid,jdbcType=VARCHAR}
      </if>
      <if test="poundnotecode != null and poundnotecode != ''" >
        and poundnotecode = #{poundnotecode,jdbcType=VARCHAR}
      </if>
      <if test="abnormalperson != null and abnormalperson != ''" >
        and abnormalperson = #{abnormalperson,jdbcType=VARCHAR}
      </if>
      <if test="abnormalpersonname != null and abnormalpersonname != ''" >
        and abnormalpersonname = #{abnormalpersonname,jdbcType=VARCHAR}
      </if>
      <if test="abnormaltime != null and abnormaltime != ''" >
        and abnormaltime = #{abnormaltime,jdbcType=BIGINT}
      </if>
      <if test="arrivalamount != null and arrivalamount != ''" >
        and arrivalamount = #{arrivalamount,jdbcType=DOUBLE}
      </if>
      <if test="signamount != null and signamount != ''" >
        and signamount = #{signamount,jdbcType=DOUBLE}
      </if>
      <if test="unit != null and unit != ''" >
        and unit = #{unit,jdbcType=VARCHAR}
      </if>
      <if test="makerid != null and makerid != ''" >
        and makerid = #{makerid,jdbcType=VARCHAR}
      </if>
      <if test="makebillname != null and makebillname != ''" >
        and makebillname = #{makebillname,jdbcType=VARCHAR}
      </if>
      <if test="makebilltime != null and makebilltime != ''" >
        and makebilltime = #{makebilltime,jdbcType=BIGINT}
      </if>
      <if test="icardid != null and state != ''" >
        and icardid = #{icardid,jdbcType=VARCHAR}
      </if>
      <if test="state != null and state != ''" >
        and state = #{state,jdbcType=VARCHAR}
      </if>
      <if test="creator != null and creator != ''" >
        and creator = #{creator,jdbcType=VARCHAR}
      </if>
      <if test="createtime != null and createtime != ''" >
        and createtime = #{createtime,jdbcType=BIGINT}
      </if>
      <if test="modifier != null and modifier != ''" >
        and modifier = #{modifier,jdbcType=VARCHAR}
      </if>
      <if test="modifytime != null and modifytime != ''" >
        and modifytime = #{modifytime,jdbcType=BIGINT}
      </if>
      <if test="remark != null and remark != ''" >
        and remark = #{remark,jdbcType=VARCHAR}
      </if>
      <if test="signStatus != null and signStatus != ''" >
        and signStatus = #{signStatus,jdbcType=TINYINT}
      </if>
      <if test="signPerson != null and signPerson != ''" >
        and signPerson = #{signPerson,jdbcType=VARCHAR}
      </if>
      <if test="signPersonName != null and signPersonName != ''" >
        and signPersonName = #{signPersonName,jdbcType=VARCHAR}
      </if>
      <if test="signTime != null and signTime != ''" >
        and signTime = #{signTime,jdbcType=BIGINT}
      </if>
      <if test="signID != null and signID != ''" >
        and signID = #{signID,jdbcType=BIGINT}
      </if>
      <if test="forceOutFactory != null and forceOutFactory != ''" >
        and forceOutFactory = #{forceOutFactory,jdbcType=BIT}
      </if>
      <if test="forceOutFactoryPerson != null and forceOutFactoryPerson != ''" >
        and forceOutFactoryPerson = #{forceOutFactoryPerson,jdbcType=VARCHAR}
      </if>
      <if test="forceOutFactoryTime != null and forceOutFactoryTime != ''" >
        and forceOutFactoryTime = #{forceOutFactoryTime,jdbcType=BIGINT}
      </if>
    </where>    
  </select>
  <select id="findPurchaseArrivePage" parameterType="com.tianrui.api.req.businessManage.purchaseManage.PurchaseArriveQuery" resultMap="BaseResultMap">
    select
    <include refid="P_Base_Column_List" />
    from tr_purchase_db_arrive p1
    left join tr_purchase_db_application p2 on p1.billid = p2.id
    left join tr_purchase_db_application_detail p3 on p1.billdetailid = p3.id
    <where>
      <if test="code != null and code !=''" >
        and p1.code = #{code,jdbcType=VARCHAR}
      </if>
      <if test="auditstatus != null and auditstatus !=''" >
        and p1.auditstatus = #{auditstatus,jdbcType=VARCHAR}
      </if>
      <if test="source != null and source !=''" >
        and p1.source = #{source,jdbcType=VARCHAR}
      </if>
      <if test="status != null and status !=''" >
        and p1.status = #{status,jdbcType=VARCHAR}
      </if>
      <if test="type != null and type !=''" >
        and p1.type = #{type,jdbcType=VARCHAR}
      </if>
      <if test="supplierid != null and supplierid !=''" >
        and p2.supplierid = #{supplierid,jdbcType=VARCHAR}
      </if>
      <if test="vehicleid != null and vehicleid !=''" >
        and p1.vehicleid = #{vehicleid,jdbcType=VARCHAR}
      </if>
      <if test="vehicleno != null and vehicleno !=''" >
        and p1.vehicleno = #{vehicleno,jdbcType=VARCHAR}
      </if>
      <if test="driverid != null and driverid !=''" >
        and p1.driverid = #{driverid,jdbcType=VARCHAR}
      </if>
      <if test="materielid != null and materielid !=''" >
        and p3.materielid = #{materielid,jdbcType=VARCHAR}
      </if>
      <if test="billcode != null and billcode !=''" >
        and p1.billcode = #{billcode,jdbcType=VARCHAR}
      </if>
      <if test="state != null and state !=''" >
        and p1.state = #{state,jdbcType=VARCHAR}
      </if>
      <if test="starttime != null and starttime != ''">
        and p1.makebilltime <![CDATA[>=]]> #{starttime,jdbcType=BIGINT}
      </if>
      <if test="endtime != null and endtime != ''">
        and p1.makebilltime <![CDATA[<]]> #{endtime,jdbcType=BIGINT}
      </if>
    </where>
    order by p1.makebilltime desc
    <if test="start != null and start >= 0">
        <if test="limit != null">
            limit #{start,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
        </if>
    </if>
  </select>
  <select id="findPurchaseArrivePageCount" parameterType="com.tianrui.api.req.businessManage.purchaseManage.PurchaseArriveQuery" resultType="java.lang.Long">
    select count(0)
    from tr_purchase_db_arrive p1
    left join tr_purchase_db_application p2 on p1.billid = p2.id
    left join tr_purchase_db_application_detail p3 on p1.billdetailid = p3.id
    <where>
      <if test="code != null and code !=''" >
        and p1.code = #{code,jdbcType=VARCHAR}
      </if>
      <if test="auditstatus != null and auditstatus !=''" >
        and p1.auditstatus = #{auditstatus,jdbcType=VARCHAR}
      </if>
      <if test="source != null and source !=''" >
        and p1.source = #{source,jdbcType=VARCHAR}
      </if>
      <if test="status != null and status !=''" >
        and p1.status = #{status,jdbcType=VARCHAR}
      </if>
      <if test="type != null and type !=''" >
        and p1.type = #{type,jdbcType=VARCHAR}
      </if>
      <if test="supplierid != null and supplierid !=''" >
        and p2.supplierid = #{supplierid,jdbcType=VARCHAR}
      </if>
      <if test="vehicleid != null and vehicleid !=''" >
        and p1.vehicleid = #{vehicleid,jdbcType=VARCHAR}
      </if>
      <if test="vehicleno != null and vehicleno !=''" >
        and p1.vehicleno = #{vehicleno,jdbcType=VARCHAR}
      </if>
      <if test="driverid != null and driverid !=''" >
        and p1.driverid = #{driverid,jdbcType=VARCHAR}
      </if>
      <if test="materielid != null and materielid !=''" >
        and p3.materielid = #{materielid,jdbcType=VARCHAR}
      </if>
      <if test="billcode != null and billcode !=''" >
        and p1.billcode = #{billcode,jdbcType=VARCHAR}
      </if>
      <if test="state != null and state !=''" >
        and p1.state = #{state,jdbcType=VARCHAR}
      </if>
      <if test="starttime != null and starttime != ''">
        and p1.makebilltime <![CDATA[>=]]> #{starttime,jdbcType=BIGINT}
      </if>
      <if test="endtime != null and endtime != ''">
        and p1.makebilltime <![CDATA[<]]> #{endtime,jdbcType=BIGINT}
      </if>
    </where>
  </select>
  <select id="checkDriverAndVehicleIsUse" resultMap="BaseResultMap" parameterType="com.tianrui.service.bean.businessManage.purchaseManage.PurchaseArrive">
    select 
    <include refid="Base_Column_List" />
    from tr_purchase_db_arrive
    <where>
        status != '5' and status != '3' and state = '1'
        <if test="id != null and id != ''">
            and id != #{id,jdbcType=VARCHAR}
        </if>
        <if test="driverid != null and driverid != ''">
            and driverid = #{driverid,jdbcType=VARCHAR}
        </if>
        <if test="vehicleid != null and vehicleid != ''">
            and vehicleid = #{vehicleid,jdbcType=VARCHAR}
        </if>
    </where>
  </select>
  <select id="selectByIds" parameterType="java.util.List" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tr_purchase_db_arrive
    where id in
    <foreach item="item" index="index" collection="list" open="(" separator="," close=")">  
        #{item}  
    </foreach>
  </select>
  <select id="hasPurchaseArrive" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT
		<include refid="Base_Column_List" />
	FROM
		tr_purchase_db_arrive
	WHERE
		vehicleno = #{vehicleno,jdbcType=VARCHAR}
	AND state = '1'
	AND STATUS != '3'
	AND (
		STATUS != '5'
		OR forceOutFactory = 1
	)
	<!-- AND forceOutFactoryTime = (
		SELECT
			MAX(forceOutFactoryTime)
		FROM
			tr_purchase_db_arrive
		WHERE
			vehicleno = #{vehicleno,jdbcType=VARCHAR}
		AND state = '1'
		AND STATUS != '3'
		AND (
			STATUS != '5'
			OR forceOutFactory = 1
		)
	) -->
  </select>
    <select id="selectByCode" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from tr_purchase_db_arrive
    where code = #{code,jdbcType=VARCHAR} and status != 3
  </select>
   <select id="checkICUse" resultMap="BaseResultMap" parameterType="java.lang.String">
    select 
    <include refid="Base_Column_List" />
    from tr_purchase_db_arrive
    where icardid = #{icardid,jdbcType=VARCHAR} and state = "1" and status != '5' and status != '3'
  </select>
  <select id="validNoticeByVehicle" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from tr_purchase_db_arrive
    where vehicleno = #{vehicleno,jdbcType=VARCHAR} and vehiclerfid = #{vehiclerfid,jdbcType=VARCHAR} 
        and status != '3' and (status != '5' or forceOutFactory = 1) and state = '1'
  </select>
  <select id="findAppNoticePage" parameterType="com.tianrui.api.req.businessManage.app.AppNoticeOrderReq" resultType="com.tianrui.api.resp.businessManage.app.AppNoticeOrderResp">
    select
    p1.id, p1.code, p1.billcode as billCode, p2.billtime as billtime, p1.makebilltime as noticetime,
    p1.vehicleno, p3.materielname as materialName, p2.suppliername as customerName,p1.arrivalamount as number, p1.source, p1. status
    from tr_purchase_db_arrive p1
    left join tr_purchase_db_application p2 on p1.billid = p2.id
    left join tr_purchase_db_application_detail p3 on p1.billdetailid = p3.id
    <where>
      <if test="code != null and code != '' ">
        and p1.code = #{code,jdbcType=VARCHAR}
      </if>
      <if test="state != null and state !=''" >
        and p1.state = #{state,jdbcType=VARCHAR}
      </if>
      <if test="status != null and status != '' ">
        and p1.status = #{status,jdbcType=VARCHAR}
      </if>
      <if test="billcode != null and billcode != '' ">
        and p2.code = #{billcode,jdbcType=VARCHAR}
      </if>
      <if test="vehicleid != null and vehicleid != '' ">
        and p1.vehicleid = #{vehicleid,jdbcType=VARCHAR}
      </if>
      <if test="materielid != null and materielid != '' ">
        and p3.materielid = #{materielid,jdbcType=VARCHAR}
      </if>
      <if test="userId != null and userId != '' ">
        and p1.makerid = #{userId,jdbcType=VARCHAR}
      </if>
      <if test="starttime != null and starttime != ''">
        and p1.makebilltime <![CDATA[>=]]> #{starttime,jdbcType=BIGINT}
      </if>
      <if test="endtime != null and endtime != ''">
        and p1.makebilltime <![CDATA[<]]> #{endtime,jdbcType=BIGINT}
      </if>
    </where>
    <if test="orderColumn != null and orderColumn != ''">
        order by ${orderColumn} 
        <choose>
            <when test="orderAsc == 'DESC'">
                DESC
            </when>
            <otherwise>
                ASC
            </otherwise>
        </choose>
    </if>
    <if test="start != null and start >= 0">
        <if test="limit != null">
            limit #{start,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
        </if>
    </if>
  </select>
  <select id="findAppNoticePageCount" parameterType="com.tianrui.api.req.businessManage.app.AppNoticeOrderReq" resultType="java.lang.Long">
    select count(0)
    from tr_purchase_db_arrive p1
    left join tr_purchase_db_application p2 on p1.billid = p2.id
    left join tr_purchase_db_application_detail p3 on p1.billdetailid = p3.id
    <where>
      <if test="code != null and code != '' ">
        and p1.code = #{code,jdbcType=VARCHAR}
      </if>
      <if test="state != null and state !=''" >
        and p1.state = #{state,jdbcType=VARCHAR}
      </if>
      <if test="status != null and status != '' ">
        and p1.status = #{status,jdbcType=VARCHAR}
      </if>
      <if test="billcode != null and billcode != '' ">
        and p2.code = #{billcode,jdbcType=VARCHAR}
      </if>
      <if test="vehicleid != null and vehicleid != '' ">
        and p1.vehicleid = #{vehicleid,jdbcType=VARCHAR}
      </if>
      <if test="materielid != null and materielid != '' ">
        and p3.materielid = #{materielid,jdbcType=VARCHAR}
      </if>
      <if test="userId != null and userId != '' ">
        and p1.makerid = #{userId,jdbcType=VARCHAR}
      </if>
      <if test="starttime != null and starttime != ''">
        and p1.makebilltime <![CDATA[>=]]> #{starttime,jdbcType=BIGINT}
      </if>
      <if test="endtime != null and endtime != ''">
        and p1.makebilltime <![CDATA[<]]> #{endtime,jdbcType=BIGINT}
      </if>
    </where>
  </select>
  <select id="appInfoFactoryVehicleAndMaterial" parameterType="com.tianrui.api.req.businessManage.app.AppOrderReq" resultType="com.tianrui.api.resp.businessManage.app.AppVehicleInFactoryResp">
    select p3.materielname as materName, count(p1.vehicleno) as vehicleCount
    from tr_purchase_db_arrive p1
        left join tr_purchase_db_application p2 on p1.billid = p2.id
        left join tr_purchase_db_application_detail p3 on p1.billdetailid = p3.id
    <where>
      <if test="state != null and state !=''" >
        and p1.state = #{state,jdbcType=VARCHAR}
      </if>
      <if test="userId != null and userId !=''" >
        and p2.supplierid = #{userId,jdbcType=VARCHAR}
      </if>
    </where>
    group by p3.materielname
  </select>
  <select id="selectLogisticsPage" parameterType="com.tianrui.api.req.businessManage.logisticsManage.PurchaseLogisticsQuery" resultType="com.tianrui.api.resp.businessManage.logisticsManage.PurchaseLogisticsResp">
    SELECT
        t1.billcode AS billCode,
        t1. CODE AS noticeCode,
        t1.type,
        t2.suppliername AS supplierName,
        t3.materielname AS materialName,
        t1.vehicleno AS vehicleNo,
        t1.makebilltime AS noticeTime,
        t4.entertime AS enterTime,
        t5.weighttime AS weightTime,
        t5.lighttime AS lightTime,
        t1.signTime AS signTime,
        t4.outtime AS outTime
    FROM
        tr_purchase_db_arrive t1
    LEFT JOIN tr_purchase_db_application t2 ON t1.billid = t2.id
    LEFT JOIN tr_purchase_db_application_detail t3 ON t1.billdetailid = t3.id
    LEFT JOIN tr_access_db_record t4 ON t1.id = t4.noticeid
    LEFT JOIN tr_pound_db_note t5 ON t1.id = t5.noticeid
    where t1.state = '1'
      <if test="supplierId != null and supplierId !=''" >
        and t2.supplierid = #{supplierId,jdbcType=VARCHAR}
      </if>
      <if test="materielId != null and materielId !=''" >
        and t3.materielid = #{materielId,jdbcType=VARCHAR}
      </if>
      <if test="vehicleId != null and vehicleId !=''" >
        and t1.vehicleid = #{vehicleId,jdbcType=VARCHAR}
      </if>
      <if test="billCode != null and billCode !=''" >
        and t1.billcode = #{billCode,jdbcType=VARCHAR}
      </if>
      <if test="noticeCode != null and noticeCode !=''" >
        and t1.code = #{noticeCode,jdbcType=VARCHAR}
      </if>
      order by t1.createtime desc
      <if test="start != null and start >= 0">
          <if test="limit != null">
              limit #{start,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
          </if>
      </if>
  </select>
  <select id="selectLogisticsPageCount" parameterType="com.tianrui.api.req.businessManage.logisticsManage.PurchaseLogisticsQuery" resultType="java.lang.Long">
    SELECT
        count(0)
    FROM
        tr_purchase_db_arrive t1
    LEFT JOIN tr_purchase_db_application t2 ON t1.billid = t2.id
    LEFT JOIN tr_purchase_db_application_detail t3 ON t1.billdetailid = t3.id
    LEFT JOIN tr_access_db_record t4 ON t1.id = t4.noticeid
    LEFT JOIN tr_pound_db_note t5 ON t1.id = t5.noticeid
    where t1.state = '1'
      <if test="supplierId != null and supplierId !=''" >
        and t2.supplierid = #{supplierId,jdbcType=VARCHAR}
      </if>
      <if test="materielId != null and materielId !=''" >
        and t3.materielid = #{materielId,jdbcType=VARCHAR}
      </if>
      <if test="vehicleId != null and vehicleId !=''" >
        and t1.vehicleid = #{vehicleId,jdbcType=VARCHAR}
      </if>
      <if test="billCode != null and billCode !=''" >
        and t1.billcode = #{billCode,jdbcType=VARCHAR}
      </if>
      <if test="noticeCode != null and noticeCode !=''" >
        and t1.code = #{noticeCode,jdbcType=VARCHAR}
      </if>
  </select>
  <select id="getByVehicleId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from tr_purchase_db_arrive
    where status not in ('3', '5') and state = 1 and vehicleid = #{vehicleId,jdbcType=VARCHAR}
  </select>
  <select id="emptyForceOutFactoryByVehicle" parameterType="java.lang.String">
	UPDATE
		tr_purchase_db_arrive
	SET forceOutFactory = 0
	WHERE
		vehicleid = #{vehicleId,jdbcType=VARCHAR}
	AND STATUS = 5
	AND forceOutFactory = 1
	AND state = 1
  </select>
  <select id="appHomeNotice" parameterType="com.tianrui.api.req.android.HomePageParam" resultType="com.tianrui.api.resp.android.HomeNoticeVo">
  	SELECT
		t1.id,
		t1.`code`,
		t1.vehicleno AS vehicle,
		t1.drivername AS driver,
		FROM_UNIXTIME(
			t2.billtime / 1000,
			"%Y-%m-%d"
		) AS billTime
	FROM
		tr_purchase_db_arrive t1
	LEFT JOIN tr_purchase_db_application t2 ON t1.billid = t2.id
	WHERE
		t1.auditstatus = 1
	AND t2.supplierid = #{ncId,jdbcType=VARCHAR}
	AND t2.state = 1
	AND t2.auditstatus = 1
	ORDER BY
		t2.billtime DESC
  </select>
  <select id="appHomeVehicle" parameterType="com.tianrui.api.req.android.HomePageParam" resultType="java.lang.String">
  	SELECT
		t1.vehicleno
	FROM
		tr_purchase_db_arrive t1
	LEFT JOIN tr_purchase_db_application t2 ON t1.billid = t2.id
	WHERE
		t1.auditstatus = 1
	AND t1.`status` IN (1, 2, 4, 6, 7)
	AND t2.supplierid = #{ncId,jdbcType=VARCHAR}
	AND t2.state = 1
	AND t2.auditstatus = 1
	ORDER BY
		t2.billtime DESC
  </select>
  <select id="appNoticeList" parameterType="com.tianrui.api.req.android.NoticeListParam" resultType="com.tianrui.api.resp.android.NoticeListVo">
  	SELECT
		t1.id,
		t1.`code`,
		FROM_UNIXTIME(
			t2.billtime / 1000,
			'%Y-%m-%d'
		) as billTime,
		t1.vehicleno as vehicle,
		t3.materielname as material,
		t1.drivername as driver,
		t1.arrivalamount number,
		t3.margin,
		CASE
			WHEN t1.`status` = 0 THEN
				'未入厂'
			WHEN t1.`status` = 1 THEN
				'一次过磅'
			WHEN t1.`status` = 2 THEN
				'二次过磅'
			WHEN t1.`status` = 3 THEN
				'作废'
			WHEN t1.`status` = 4 THEN
				'发卡'
			WHEN t1.`status` = 5
			AND t1.forceOutFactory = 0 THEN
				'出厂'
			WHEN t1.`status` = 5
			AND t1.forceOutFactory = 1 THEN
				'强制出厂'
			WHEN t1.`status` = 6 THEN
				'入厂'
			WHEN t1.`status` = 7 THEN
				'装车'
			ELSE
				''
		END AS status
	FROM
		tr_purchase_db_arrive t1
	LEFT JOIN tr_purchase_db_application t2 ON t1.billid = t2.id
	LEFT JOIN tr_purchase_db_application_detail t3 ON t1.billdetailid = t3.id
	WHERE
		t1.state = 1
	AND t1.`status` != 3 
	AND t2.supplierid = #{ncId, jdbcType=VARCHAR}
	<choose>
		<when test="type == 0">
			and t1.auditstatus = 0
		</when>
		<when test="type == 1">
			and t1.auditstatus = 1 and t1.`status` = 0
		</when>
		<when test="type == 2">
			and t1.auditstatus = 1 and t1.`status` in (1,2,4,6,7)
		</when>
		<when test="type == 3">
			and t1.auditstatus = 1 and t1.`status` = 5
		</when>
		<otherwise></otherwise>
	</choose>
	<if test="code != null and code != ''">
		AND t1.`code` = #{code,jdbcType=VARCHAR}
	</if>
	<if test="vehicle != null and vehicle != ''">
		AND (t1.vehicleid = #{vehicle,jdbcType=VARCHAR}
			OR 
			t1.vehicleno = #{vehicle,jdbcType=VARCHAR})
	</if>
	<if test="driver != null and driver != ''">
		AND (t1.driverid = #{driver,jdbcType=VARCHAR}
			OR 
			t1.drivername = #{driver,jdbcType=VARCHAR})
	</if>
	<if test="material != null and material != ''">
		AND (t3.materielid = #{material,jdbcType=VARCHAR}
			OR 
			t3.materielname = #{material,jdbcType=VARCHAR})
	</if>
	<if test="source != null and source != ''">
		AND t1.source = #{source,jdbcType=VARCHAR}
	</if>
	<if test="startTime != null">
		and t2.billtime <![CDATA[>=]]> #{startTime, jdbcType=BIGINT}
	</if>
	<if test="endTime != null">
		and t2.billtime <![CDATA[<]]> #{endTime, jdbcType=BIGINT}
	</if>
	ORDER BY t1.createtime DESC
	<if test="start != null and start >= 0">
        <if test="limit != null">
            limit #{start,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
        </if>
    </if>
  </select>
  <select id="appNoticeListCount" parameterType="com.tianrui.api.req.android.NoticeListParam" resultType="java.lang.Long">
  	SELECT
		count(0)
	FROM
		tr_purchase_db_arrive t1
	LEFT JOIN tr_purchase_db_application t2 ON t1.billid = t2.id
	LEFT JOIN tr_purchase_db_application_detail t3 ON t1.billdetailid = t3.id
	WHERE
		t1.state = 1
	AND t1.`status` != 3 
	AND t2.supplierid = #{ncId, jdbcType=VARCHAR}
	<choose>
		<when test="type == 0">
			and t1.auditstatus = 0
		</when>
		<when test="type == 1">
			and t1.auditstatus = 1 and t1.`status` = 0
		</when>
		<when test="type == 2">
			and t1.auditstatus = 1 and t1.`status` in (1,2,4,6,7)
		</when>
		<when test="type == 3">
			and t1.auditstatus = 1 and t1.`status` = 5
		</when>
		<otherwise></otherwise>
	</choose>
	<if test="code != null and code != ''">
		AND t1.`code` = #{code,jdbcType=VARCHAR}
	</if>
	<if test="vehicle != null and vehicle != ''">
		AND (t1.vehicleid = #{vehicle,jdbcType=VARCHAR}
			OR 
			t1.vehicleno = #{vehicle,jdbcType=VARCHAR})
	</if>
	<if test="driver != null and driver != ''">
		AND (t1.driverid = #{driver,jdbcType=VARCHAR}
			OR 
			t1.drivername = #{driver,jdbcType=VARCHAR})
	</if>
	<if test="material != null and material != ''">
		AND (t3.materielid = #{material,jdbcType=VARCHAR}
			OR 
			t3.materielname = #{material,jdbcType=VARCHAR})
	</if>
	<if test="source != null and source != ''">
		AND t1.source = #{source,jdbcType=VARCHAR}
	</if>
	<if test="startTime != null">
		and t2.billtime <![CDATA[>=]]> #{startTime, jdbcType=BIGINT}
	</if>
	<if test="endTime != null">
		and t2.billtime <![CDATA[<]]> #{endTime, jdbcType=BIGINT}
	</if>
  </select>
  <select id="appNoticeDetail" parameterType="com.tianrui.api.req.android.NoticeListParam" resultType="com.tianrui.api.resp.android.NoticeListVo">
  	SELECT
		t1.id,
		t2.`code` AS billCode,
		t1.`code`,
		FROM_UNIXTIME(
			t2.billtime / 1000,
			'%Y-%m-%d'
		) AS billTime,
		t1.vehicleno AS vehicle,
		t3.materielname AS material,
		t1.drivername AS driver,
		CASE
		WHEN t1.source = 0 THEN
			'业务平台'
		WHEN t1.source = 2 THEN
			'客商APP'
		ELSE
			''
		END AS source,
		t4.grossweight AS grossWeight,
		t4.tareweight AS tareWeight,
		t4.netweight AS netWeight,
		FROM_UNIXTIME(
			t4.lighttime / 1000,
			'%Y-%m-%d %H:%i:%s'
		) AS lightTime,
		 FROM_UNIXTIME(
			t4.weighttime / 1000,
			'%Y-%m-%d %H:%i:%s'
		) AS weightTime,
		 CASE
		WHEN t1.auditstatus = 0 THEN
			0
		WHEN t1.auditstatus = 1
		AND t1.`status` = 0 THEN
			1
		WHEN t1.auditstatus = 1
		AND t1.`status` IN (1, 2, 4, 6, 7) THEN
			2
		WHEN t1.auditstatus = 1
		AND t1.`status` = 5 THEN
			3
		ELSE
			''
		END AS type,
		t4.`code` AS pnCode,
		t3.unit,
		t1.arrivalamount number,
		t3.margin
	FROM
		tr_purchase_db_arrive t1
	LEFT JOIN tr_purchase_db_application t2 ON t1.billid = t2.id
	LEFT JOIN tr_purchase_db_application_detail t3 ON t1.billdetailid = t3.id
	LEFT JOIN tr_pound_db_note t4 ON t1.id = t4.noticeid
	WHERE
		t1.state = 1
	AND t1.`status` != 3
	AND t1.id = #{id, jdbcType=VARCHAR}
  </select>
  <select id="appMyVehicleList" parameterType="com.tianrui.api.req.android.MyVehicleListParam" resultType="com.tianrui.api.resp.android.MyVehicleListVo">
  	SELECT
		t1.vehicleno AS vehicle,
		t3.telephone,
		t3.`name` AS driver,
		CASE
		WHEN t1.`status` = 0 THEN
			'未入厂'
		WHEN t1.`status` = 1 THEN
			'一次过磅'
		WHEN t1.`status` = 2 THEN
			'二次过磅'
		WHEN t1.`status` = 4 THEN
			'发卡'
		WHEN t1.`status` = 5
		AND t1.forceOutFactory = 0 THEN
			'出厂'
		WHEN t1.`status` = 5
		AND t1.forceOutFactory = 1 THEN
			'强制出厂'
		WHEN t1.`status` = 6 THEN
			'入厂'
		WHEN t1.`status` = 7 THEN
			'装车'
		ELSE
			''
		END AS `status`
	FROM
		tr_purchase_db_arrive t1
	LEFT JOIN tr_purchase_db_application t2 ON t1.billid = t2.id
	LEFT JOIN tr_driver_db_manage t3 ON t1.driverid = t3.id
	WHERE
		t1.state = 1
	AND t1.`status` != 3
	AND t2.supplierid = #{ncId, jdbcType=VARCHAR}
	<choose>
		<when test="type == 0">
			and t1.`status` = 0
		</when>
		<when test="type == 1">
			and t1.`status` in (1,2,4,6,7)
		</when>
		<otherwise></otherwise>
	</choose>
	ORDER BY t1.createtime DESC
	<if test="start != null and start >= 0">
        <if test="limit != null">
            limit #{start,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
        </if>
    </if>
  </select>
  <select id="appMyVehicleListCount" parameterType="com.tianrui.api.req.android.MyVehicleListParam" resultType="java.lang.Long">
  	SELECT
		count(0)
	FROM
		tr_purchase_db_arrive t1
	LEFT JOIN tr_purchase_db_application t2 ON t1.billid = t2.id
	LEFT JOIN tr_driver_db_manage t3 ON t1.driverid = t3.id
	WHERE
		t1.state = 1
	AND t1.`status` != 3
	AND t2.supplierid = #{ncId, jdbcType=VARCHAR}
	<choose>
		<when test="type == 0">
			and t1.`status` = 0
		</when>
		<when test="type == 1">
			and t1.`status` in (1,2,4,6,7)
		</when>
		<otherwise></otherwise>
	</choose>
  </select>
</mapper>