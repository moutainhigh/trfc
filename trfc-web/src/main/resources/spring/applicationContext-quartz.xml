<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:aop="http://www.springframework.org/schema/aop"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	
	<!-- Spring 定时器，每个定义的任务都要在这里进行引用才能运行 -->  
    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">  
        <property name="triggers">  
            <list> 
            	<!-- 获取到期的货运计划，并将计划状态修改为已完成 --> 
                <ref local="getPlanAndCompletedTrigger" /> 
            </list>  
        </property>  
    </bean>  
        
     <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~读取oracle数据库信息发送短信的定时任务~~~~~~~~~~~~~~~~~~~~~~~~~ -->
     <!-- 引用，定制调用间隔 -->  
    <bean id="getPlanAndCompletedTrigger"  
        class="org.springframework.scheduling.quartz.CronTriggerBean">  
        <property name="jobDetail">  
            <ref bean="getPlanAndCompleted" />  
        </property>  
        <property name="cronExpression">  
         <!-- 每 30分执行一次 -->
            <value> * 0/30 * * * ?</value>    
        </property>  
    </bean>     
    <!-- 引用，配置要运行的方法 -->  
    <bean id="getPlanAndCompleted"  
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">  
        <property name="targetObject">  
            <ref bean="getPlanAndCompletedTime" />  
        </property>  
        <property name="concurrent" value="false" />  
        <property name="targetMethod" value="getPlanAndCompleted" />  
    </bean>  
    <!-- 定义我们要运行的类，可以使用注入定制一些参数 ，调用的serevice 必须重新注入，不能和Action 共用-->  
    <bean id="getPlanAndCompletedTime" class="com.tianrui.quartz.plan.GetPlanAndCompletedTrigger"> 
    	<!--定时任务参数  --> 
        <property name="para" value="5" /> 
    </bean> 
    
</beans>
